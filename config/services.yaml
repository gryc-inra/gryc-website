# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

# Twig
    twig.extension.text:
       class: Twig_Extensions_Extension_Text
       tags:
           - { name: twig.extension }

# Services
    App\Service\AlignmentManipulator:
        public: true

    App\Service\BlastManager:
        public: true
        arguments:
            $projectDir: '%kernel.project_dir%'
            $producer: '@old_sound_rabbit_mq.blast_producer'

    App\Service\CartManager:
        public: true

    App\Service\FileManager:
        public: true
        arguments:
            $projectDir: '%kernel.project_dir%'

    App\Service\LoginBruteForce:
        public: true

    App\Service\MultipleAlignmentManager:
        public: true
        arguments:
            $producer: '@old_sound_rabbit_mq.multiple_alignment_producer'

    App\Service\ReferenceManager:
        public: true

    App\Service\SequenceManipulator:
        public: true

    App\Service\TaxId:
        public: true

    App\Service\UserManager:
        public: true

# Listeners
    App\EventListener\BlastSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\EventListener\ContactNotificationSubscriber:
        $senderMail: '%env(MAILER_SENDER_ADDRESS)%'
        $senderName: '%env(MAILER_SENDER_NAME)%'

    App\EventListener\EntitiesCleanerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: 'onTerminate' }

    App\EventListener\FileSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\EventListener\MultipleAlignmentSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\EventListener\OneSessionPerUserSubscriber:
        arguments:
            $logoutUrlHelper: '@templating.helper.logout_url'
        tags:
            - { name: kernel.event_listener, event: security.interactive_login }
            - { name: kernel.event_listener, event: kernel.request }

    App\EventListener\ReferenceListener:
        tags:
            - { name: doctrine.event_listener, event: postUpdate }

    App\EventListener\UserNotificationSubscriber:
        $senderMail: '%env(MAILER_SENDER_ADDRESS)%'
        $senderName: '%env(MAILER_SENDER_NAME)%'

    App\EventListener\UserSubscriber:
        tags:
            - { name: doctrine.event_subscriber }
