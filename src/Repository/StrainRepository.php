<?php
/**
 *    Copyright 2015-2018 Mathieu Piot.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

namespace App\Repository;

/**
 * StrainRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StrainRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $slug
     *
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     *
     * @return mixed
     */
    public function getStrainWithSpeciesAndChromosomes($slug)
    {
        $query = $this
            ->createQueryBuilder('strain')
            ->where('strain.slug = :slug')
            ->setParameter('slug', $slug)
            ->leftJoin('strain.species', 'species')
                ->addSelect('species')
            ->leftJoin('strain.chromosomes', 'c')
                ->addSelect('c')
                ->orderBy('c.name', 'ASC')
            ->getQuery();

        return $query->getSingleResult();
    }

    /**
     * @param $slug
     *
     * @throws \Doctrine\ORM\NonUniqueResultException
     *
     * @return mixed
     */
    public function getStrainWithFlatFiles($slug)
    {
        $query = $this
            ->createQueryBuilder('strain')
                ->where('strain.slug = :slug')
                ->setParameter('slug', $slug)
            ->leftJoin('strain.users', 'users')
                ->addSelect('users')
            ->leftJoin('strain.chromosomes', 'chromosomes')
                ->addSelect('chromosomes')
                ->orderBy('chromosomes.name', 'ASC')
            ->leftJoin('chromosomes.flatFiles', 'flatFiles')
                ->addSelect('flatFiles')
            ->leftJoin('strain.species', 'species')
                ->addSelect('species')
            ->leftJoin('strain.seos', 'seos')
                ->addSelect('seos')
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    /**
     * @return array
     */
    public function getStrainsWithSpeciesAndClade()
    {
        $query = $this
            ->createQueryBuilder('strain')
            ->leftJoin('strain.species', 'species')
                ->addSelect('species')
            ->leftJoin('species.clade', 'clade')
                ->addSelect('clade')
            ->orderBy('species.scientificName', 'ASC')
            ->addOrderBy('strain.name', 'ASC')
            ->getQuery();

        return $query->getResult();
    }
}
