# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

# Twig
    twig.extension.text:
       class: Twig_Extensions_Extension_Text
       tags:
           - { name: twig.extension }

# Comands
    AppBundle\Command\ImportStrainCommand:
        arguments:
            $projectDir: '%kernel.project_dir%'

# Utils
    AppBundle\Utils\BlastManager:
        public: true
        arguments:
            $projectDir: '%kernel.project_dir%'

    AppBundle\Utils\CartManager:
        public: true

    AppBundle\Utils\FileManager:
        public: true
        arguments:
            $projectDir: '%kernel.project_dir%'

    AppBundle\Utils\LoginBruteForce:
        public: true

    AppBundle\Utils\MultipleAlignmentManager:
        public: true

    AppBundle\Utils\ReferenceManager:
        public: true

    AppBundle\Utils\SequenceManipulator:
        public: true

    AppBundle\Utils\TaxId:
        public: true

    AppBundle\Utils\UserManager:
        public: true

# Listeners
    AppBundle\EventListener\BlastSubscriber:
        arguments:
            $producer: '@old_sound_rabbit_mq.blast_producer'
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    AppBundle\EventListener\ContactNotificationSubscriber:
        $senderMail: '%env(MAILER_SENDER_ADDRESS)%'
        $senderName: '%env(MAILER_SENDER_NAME)%'

    AppBundle\EventListener\EntitiesCleanerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: 'onTerminate' }

    AppBundle\EventListener\FileSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    AppBundle\EventListener\MultipleAlignmentSubscriber:
        arguments:
            $producer: '@old_sound_rabbit_mq.multiple_alignment_producer'
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    AppBundle\EventListener\OneSessionPerUserSubscriber:
        arguments:
            $logoutUrlHelper: '@templating.helper.logout_url'
        tags:
            - { name: kernel.event_listener, event: security.interactive_login }
            - { name: kernel.event_listener, event: kernel.request }

    AppBundle\EventListener\ReferenceListener:
        tags:
            - { name: doctrine.event_listener, event: postUpdate }

    AppBundle\EventListener\UserNotificationSubscriber:
        $senderMail: '%env(MAILER_SENDER_ADDRESS)%'
        $senderName: '%env(MAILER_SENDER_NAME)%'

    AppBundle\EventListener\UserSubscriber:
        tags:
            - { name: doctrine.event_subscriber }
