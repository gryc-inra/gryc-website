{#
   Copyright 2015-2018 Mathieu Piot

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
#}

<div class="row">
    <div id="blast-results">
        {% if result.iterations|length > 1 %}
            <div class="row">
                <div class="col-lg-4">
                    <h2 id="job-hits">Hits</h2>
                    <table class="table table-striped">
                        <tr>
                            <th>Query name</th>
                            <th>Query length</th>
                            <th>Number of hits</th>
                        </tr>

                        {% for query in result.iterations %}
                            <tr>
                                <td><a href={{ "#query-" ~ query.query_num }}>{{ query.query_def }}</a></td>
                                <td>{{ query.query_len }}</td>
                                <td>{{ query.hits|length }}</td>
                            </tr>
                        {% endfor %}
                    </table>
                </div>
            </div>
        {% endif %}

        {% for query in result.iterations %}
            <h2 id="{{ "query-" ~ query.query_num }}">Query description</h2>
            <table class="table">
                <tr>
                    <th>Query</th>
                    <td>{{ query.query_def }}; {{ query.query_len }} residus.</td>
                </tr>
                <tr>
                    <th>Database</th>
                    <td></td>
                </tr>
                <tr>
                    <th>Algorithm</th>
                    <td>{{ result.blast_version }}</td>
                </tr>
            </table>

            {% if query.hits is not empty %}
                <h3 id="{{ "query-" ~ query.query_num ~ "-summary" }}">Graphical summary of the {{ query.hits|length }} hits obtained</h3>

                {# Set SVG params #}
                {% set svgWidth, svgPadding, svgElementsPadding = 750, 10, 5 %}
                {% set leftLegendWidth = 190 %}
                {% set queryRecHeight, queryRecRadian, queryLineY = 15, 5, svgPadding + svgElementsPadding %}
                {% set queryRecY = queryLineY - queryRecHeight/2 %}

                {% set gridLength, gridYposition, gridGraduationHeigth = ((svgWidth - svgPadding*2 - svgElementsPadding) - leftLegendWidth), (queryLineY + queryRecHeight), 5 %}
                {% set hitRecHeight, hitRadian = 10, 5 %}
                {% set hitYPosition, hitLineSpace = gridYposition + gridGraduationHeigth + hitRecHeight*2, hitRecHeight + svgElementsPadding %}

                {% set colorLegendHeigth = 20 %}

                {% set hitsHeight = hitYPosition + query.hits|length * (hitRecHeight + svgElementsPadding) %}
                {% set colorLegendYStart = hitsHeight + svgElementsPadding %}

                {# in svgHeight the +10 is the font size of the legend #}
                {% set svgHeight = colorLegendYStart + colorLegendHeigth + 10 %}

                <svg class="mb-3" height="{{ svgHeight }}" width="{{ svgWidth }}" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    {# Draw the query #}
                    <line stroke="#B8B8B8" x1="{{ leftLegendWidth }}" x2="{{ svgWidth - svgPadding }}" y1="{{ queryLineY }}" y2="{{ queryLineY }}"></line>
                    <rect fill="#C05350" height="{{ queryRecHeight }}" rx="{{ queryRecRadian }}" ry="{{ queryRecRadian }}" width="{{ svgWidth - leftLegendWidth - svgPadding - svgElementsPadding*2 }}" x="{{ leftLegendWidth + svgElementsPadding }}" y="{{ queryRecY }}"></rect>
                    <text font-size="16" x="{{ svgPadding }}" y="{{ queryLineY + 4 }}">{{ query.query_def|truncate(16) }}</text>

                    {# Draw the grid #}
                    <line stroke="black" x1="{{ leftLegendWidth + svgElementsPadding }}" x2="{{ svgWidth - svgPadding - svgElementsPadding }}" y1="{{ gridYposition }}" y2="{{ gridYposition }}"></line>

                    {% set x = leftLegendWidth + svgElementsPadding %}
                    {% for i in 0..(query.draw_nb_steps - 1) %}
                        <line stroke="black" x1="{{ x + i*(gridLength / query.draw_nb_steps)  }}" x2="{{ x + i*(gridLength / query.draw_nb_steps) }}" y1="{{ gridYposition }}" y2="{{ gridYposition + gridGraduationHeigth }}"></line>
                        {% if loop.index0 is even %}
                            <text font-size="10" x="{{ x + i*(gridLength / query.draw_nb_steps) }}" y="{{ gridYposition + gridGraduationHeigth + 8 }}">{{ i * query.draw_grid_step }}</text>
                        {% endif %}
                        <line stroke="#B8B8B8" stroke-dasharray="5,5" x1="{{ x + i*(gridLength / query.draw_nb_steps)  }}" x2="{{ x + i*(gridLength / query.draw_nb_steps)  }}" y1="{{ gridYposition + gridGraduationHeigth }}" y2="{{ hitsHeight }}"></line>
                    {% endfor %}

                    {# Draw the hits #}
                    {% set pxPerNuc = ((svgWidth - svgPadding - svgElementsPadding) - (leftLegendWidth + svgElementsPadding)) / query.query_len %}

                    {% for hit in query.hits %}
                        {% set LineX1, LineX2, LineY = leftLegendWidth, svgWidth - svgPadding, hitYPosition + loop.index0 * hitLineSpace %}

                        <line stroke="#B8B8B8" x1="{{ LineX1 }}" x2="{{ LineX2 }}" y1="{{ LineY }}" y2="{{ LineY }}"></line>
                        <a href="{{ '#query-' ~ query.query_num ~ '-hit-' ~ hit.num }}">
                            <text font-size="10" x="{{ svgPadding }}" y="{{ LineY }}">{{ hit.name }}</text>
                        </a>
                        {% for hsp in hit.hsps if hsp.draw %}
                            {% set hspStart, hspLength = hsp.query_from * pxPerNuc, (hsp.query_to - hsp.query_from + 1) * pxPerNuc %}

                            {% if hsp.bit_score > 500 %}
                                {% set hspColor = '#C05350' %}
                            {% elseif hsp.bit_score > 350 %}
                                {% set hspColor = '#D68C8B' %}
                            {% elseif hsp.bit_score > 200 %}
                                {% set hspColor = '#F99C4F' %}
                            {% elseif hsp.bit_score > 150 %}
                                {% set hspColor = '#9ABE52' %}
                            {% elseif hsp.bit_score > 100 %}
                                {% set hspColor = '#4AACC5' %}
                            {% elseif hsp.bit_score > 50 %}
                                {% set hspColor = '#4F81BC' %}
                            {% else %}
                                {% set hspColor = '#7D63A0' %}
                            {% endif %}

                            <a href="{{ "#query-" ~ query.query_num ~ "-hit-" ~ hit.num ~ "-hsp-" ~ hsp.num }}">
                                <rect fill="{{ hspColor }}" height="{{ hitRecHeight }}" rx="{{ hitRadian }}" ry="{{ hitRadian }}" width="{{ hspLength }}" x="{{ hspStart + leftLegendWidth + svgElementsPadding }}" y="{{ LineY - hitRecHeight / 2 }}"></rect>
                            </a>
                        {% endfor %}
                    {% endfor %}

                    {# Draw the color legend #}
                    {# Change y #}
                    <text font-size="16" x="{{ svgPadding }}" y="{{ colorLegendYStart + 16 }}">Scoring colors</text>
                    <rect fill="#7D63A0" height="20" width="75" x="195" y="{{ colorLegendYStart }}"></rect>
                    <text font-size="10" x="195" y="{{ colorLegendYStart + colorLegendHeigth + 10 }}">s&gt;0</text>
                    <rect fill="#4F81BC" height="20" width="75" x="270" y="{{ colorLegendYStart }}"></rect>
                    <text font-size="10" x="270" y="{{ colorLegendYStart + colorLegendHeigth + 10 }}">s&gt;50</text>
                    <rect fill="#4AACC5" height="20" width="75" x="345" y="{{ colorLegendYStart }}"></rect>
                    <text font-size="10" x="345" y="{{ colorLegendYStart + colorLegendHeigth + 10 }}">s&gt;100</text>
                    <rect fill="#9ABE52" height="20" width="75" x="420" y="{{ colorLegendYStart }}"></rect>
                    <text font-size="10" x="420" y="{{ colorLegendYStart + colorLegendHeigth + 10 }}">s&gt;150</text>
                    <rect fill="#F99C4F" height="20" width="75" x="495" y="{{ colorLegendYStart }}"></rect>
                    <text font-size="10" x="495" y="{{ colorLegendYStart + colorLegendHeigth + 10 }}">s&gt;200</text>
                    <rect fill="#D68C8B" height="20" width="75" x="570" y="{{ colorLegendYStart }}"></rect>
                    <text font-size="10" x="570" y="{{ colorLegendYStart + colorLegendHeigth + 10 }}">s&gt;350</text>
                    <rect fill="#C05350" height="20" width="75" x="645" y="{{ colorLegendYStart }}"></rect>
                    <text font-size="10" x="645" y="{{ colorLegendYStart + colorLegendHeigth + 10 }}">s&gt;500</text>
                </svg>

                <h3 id="{{ "query-" ~ query.query_num ~ '-best-hits' }}">Best hit table</h3>
                <table class="table table-striped">
                    <tr>
                        <th>Seq ID</th>
                        <th>Description</th>
                        <th>Max bit score</th>
                        <th>Min E.value</th>
                        <th>Max ident.</th>
                        <th class="d-print-none">Links</th>
                    </tr>

                    {% for hit in query.hits %}
                        <tr>
                            <td>
                                {% if hit.locus_entity is defined %}
                                    <a href="{{ path('locus_view', {
                                        'species_slug': hit.locus_entity.chromosome.strain.species.slug,
                                        'strain_slug': hit.locus_entity.chromosome.strain.slug,
                                        'chromosome_slug': hit.locus_entity.chromosome.slug,
                                        'locus_slug': hit.locus_entity.slug
                                    }) }}">
                                        {{ hit.name }}
                                    </a>
                                {% else %}
                                    {{ hit.name }}<br />
                                {% endif %}
                            </td>
                            <td>{{ hit.desc }}</td>
                            <td>{{ hit.hsps.0.bit_score }}</td>
                            <td>{{ hit.hsps.0.evalue }}</td>
                            <td>{{ hit.hsps.0.identity }}</td>
                            <td class="d-print-none">
                                {% if hit.locus_entity is defined %}
                                    <a class="btn btn-secondary btn-sm cart-add-btn" href="{{ path('cart_add', { 'id': hit.locus_entity.id }) }}" role="button">
                                        <span class="fas fa-shopping-cart" aria-hidden="true"></span> Add to cart
                                    </a>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                </table>

                <h3 id="{{ "query-alignment-" ~ query.query_num }}">Pairwise alignment details</h3>
                {% for hit in query.hits %}
                    <div id="{{ "query-" ~ query.query_num ~ "-hit-" ~ hit.num }}" class="card my-3">
                        <p class="card-header">
                            {% if hit.locus_entity is defined %}
                                <a href="{{ path('locus_view', {
                                    'species_slug': hit.locus_entity.chromosome.strain.species.slug,
                                    'strain_slug': hit.locus_entity.chromosome.strain.slug,
                                    'chromosome_slug': hit.locus_entity.chromosome.slug,
                                    'locus_slug': hit.locus_entity.slug
                                }) }}">
                                    {{ hit.name }}
                                </a><br />
                            {% else %}
                               {{ hit.name }}
                            {% endif %}
                        </p>
                        <div class="card-body">
                            <b>Description:</b> {{ hit.desc }}<br />
                            <b>Length:</b> {{ hit.len }}
                        </div>
                    </div>

                    {% for hsp in hit.hsps %}
                        <h4 id="{{ "query-" ~ query.query_num ~ "-hit-" ~ hit.num ~ "-hsp-" ~ hsp.num }}">From {{ hsp.query_from }} to {{ hsp.query_to }}</h4>
                        <table class="table table-striped">
                            <tr>
                                <th>Score</th>
                                <th>Expect</th>
                                <th>Identities</th>
                                {% if 'blastn' != result.blast_tool %}
                                    <th>Positives</th>
                                {% endif %}
                                <th>Gaps</th>
                                {% if 'blastp' != result.blast_tool %}
                                    <th>Frame</th>
                                {% endif %}
                            </tr>
                            <tr>
                                <td>{{ hsp.bit_score|round(0, 'floor') }} bits ({{ hsp.score }})</td>
                                <td>{{ hsp.evalue }}</td>
                                <td>{{ hsp.identity }}/{{ hsp.align_len }} ({{  (hsp.identity / hsp.align_len * 100)|round(2)}} %)</td>
                                {# The Positives field is displayed for all, expect for blastn #}
                                {% if 'blastn' != result.blast_tool %}
                                    <td>{{ hsp.positive }}/{{ hsp.align_len }} ({{  (hsp.positive / hsp.align_len * 100)|round(2)}} %)</td>
                                {% endif %}
                                <td>{{ hsp.gaps }}/{{ hsp.align_len }} ({{  (hsp.gaps / hsp.align_len * 100)|round(2) }} %)</td>
                                {# The Frame display depend on the tool #}
                                {% if 'blastn' == result.blast_tool %}
                                    <td>{{ 1 == hsp.query_frame ? 'Plus' : 'Minus' }}/{{ 1 == hsp.hit_frame ? 'Plus' : 'Minus' }}</td>
                                {% elseif 'tblastn'  == result.blast_tool %}
                                    <td>{{ hsp.hit_frame > 0 ? '+' ~ hsp.hit_frame : hsp.hit_frame }}</td>
                                {% elseif 'blastx'  == result.blast_tool %}
                                    <td>{{ hsp.query_frame > 0 ? '+' ~ hsp.query_frame : hsp.query_frame }}</td>
                                {% elseif 'tblastx'  == result.blast_tool %}
                                    <td>{{ hsp.query_frame > 0 ? '+' ~ hsp.query_frame : hsp.query_frame }}/{{ hsp.hit_frame > 0 ? '+' ~ hsp.hit_frame : hsp.hit_frame }}</td>
                                {% endif %}
                            </tr>
                        </table>
                        <div class="blast-alignment">
                            {% for i in 0..hsp.qseq|length - 1 %}
                                <div class="alignment-row">
                                    {# Query row #}
                                    {{ hsp.qseq[i]|raw }}<br>
                                    {# Middle row #}
                                    {{ hsp.midline[i]|raw }}<br>
                                    {# Hit row #}
                                    {{ hsp.hseq[i]|raw }}<br>
                                    <br>
                                </div>
                            {% endfor %}
                        </div>
                    {% endfor %}
                {% endfor %}
            {% else %}
                <div class="alert alert-warning" role="alert"><span class="fas fa-exclamation-circle" aria-hidden="true"></span> There is no result !</div>
            {% endif %}
        {% endfor %}
    </div>

    <div id="blast-menu">
        <nav id="blast-scrollspy" class="navbar navbar-light bg-light scrollspy">
            <nav class="nav nav-pills flex-column">
                {% if result.iterations|length > 1 %}
                    <a class="nav-link" href="#job-hits">Hits</a>
                {% endif %}

                {% for query in result.iterations %}
                    <a class="nav-link" href="{{ '#query-' ~ query.query_num }}">{{ query.query_def|truncate(16) }}</a>
                    <nav class="nav nav-pills flex-column">
                        {% if query.hits is not empty %}
                            <a class="nav-link ml-3 my-1" href="{{ '#query-' ~ query.query_num ~ '-summary' }}">Graphical Summary</a>
                            <a class="nav-link ml-3 my-1" href="{{ '#query-' ~ query.query_num ~ '-best-hits' }}">Best hit table</a>
                            {% for hit in query.hits %}
                                <a class="nav-link ml-3 my-1" href="{{ '#query-' ~ query.query_num ~ '-hit-' ~ hit.num }}">{{ hit.name }}</a>
                            {% endfor %}
                        {% endif %}
                    </nav>
                {% endfor %}
            </nav>
        </nav>
    </div>
</div>
