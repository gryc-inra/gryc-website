{# app/Ressources/views/species/add.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}
    Add a species
{% endblock %}

{% block metaTags %}
    <meta name="robots" content="noindex">
{% endblock %}

{% block breadcrumb %}
    {{ parent() }}
    <li><a href="{{ path('admin_index') }}">Administration</a></li>
    <li><a href="{{ path('species_list') }}">Species management</a></li>
    <li class="active">Add a species</li>
{% endblock %}

{% block body %}
    <h1>Add a species</h1>

    {{ form(form) }}

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('js/species-collection.js') }}"></script>

    <script type="text/javascript">
        $(function () {
            // Set the taxid div
            var taxidDiv = $('#species_taxid').parent().parent();
            // Resize the input
            $('.col-sm-10', taxidDiv).removeClass('col-sm-10').addClass('col-sm-9');
            // Add a button and a hidden loader
            taxidDiv.append('<div class="col-sm-1"><a href="#" id="taxid-send" class="btn btn-info btn-sm"><span class=" glyphicon glyphicon-refresh"></span></a><img  style="display:none;" id="taxid-send-loader" src="{{ asset('images/ajax-loader.gif') }}" alt="Ajax loader" /></div>');

            // When someone click on the button
            $("#taxid-send").click(function (e) {
                // To prevent a # in the URL
                e.preventDefault();

                // Take the taxid value
                var taxid = $("#species_taxid").val();

                // If the visitor click on the button with something writed in the input field
                if (taxid.length > 0) {
                    // Define the URL for ajax, use replace permit use symfony routing
                    var url = "{{ path('species_getjson', { 'taxid': 'taxid-change' }) }}";
                    url = url.replace('taxid-change', taxid);

                    $.ajax({
                        url: url,
                        dataType: 'json',
                        beforeSend: function () {
                            // Replace the button by a loader
                            $('#taxid-send').hide();
                            $('#taxid-send-loader').show();

                            // Remove previous error messages
                            taxidDiv.removeClass("has-error");
                            $(".col-sm-9  > .help-block", taxidDiv).remove();

                            // Empty first input
                            $('#species_lineages :input:first').val('');
                            $('#species_synonymes :input:first').val('');

                            // Remove previous collection input
                            $('#species_lineages :input:gt(0)').parent().parent().remove();
                            $('#species_synonymes :input:gt(0)').parent().parent().remove();
                        },
                        success: function (data) {
                            // If the result is an error, display it
                            if ("error" in data) {
                                taxidDiv.addClass("has-error");
                                $(".col-sm-9", taxidDiv).append("<span class='help-block'><ul class='list-unstyled'><li><span class='glyphicon glyphicon-exclamation-sign'></span> " + data.error + "</li> </ul></span>");
                            // Else call populate function
                            } else {
                                populate(data);
                            }
                        },
                        complete: function () {
                            // Replace the loader by a button
                            $('#taxid-send').show();
                            $('#taxid-send-loader').hide();
                        }
                    });
                }
            });

            function populate(data) {
                // A while on each value of the json
                $.each(data, function(key, value){
                    // If this is a lineages or synonymes array, create fields before
                    if (key == 'synonymes' || key == 'lineages') {
                        // Create fields
                        for(i = 1; i < value.length; i++) {
                            if (key == 'synonymes')
                                $('#add_synonym').trigger('click');
                            else
                                $('#add_lineage').trigger('click');
                        }

                        // Hydrate the fields
                        $.each(value, function(subkey, subvalue){
                            //$(' #species_'+key+'_'+subkey).val(subvalue);
                            $('#species_'+key+' :input').eq(subkey).val(subvalue);
                        });
                    // Else just fill the input
                    } else {
                        $(' #species_'+key).val(value);
                    }
                });
            }
        });
    </script>
{% endblock %}
